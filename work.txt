2016.08.31 下载rockchip提供的sdk，发现是4.4.4 下载一夜。共计26G左右大小

2016.09.01 拷贝一份，简单配置下内核，android部分没动，第一次编译。一开始以为是编译依赖没做好，多线程编译-j8 -j4都提示找不到文件，所以用单线程编译。还是不成功，发现是cp工程的时候，不知道为什么有几个文件没有copy过去，对比确认没问题后，继续编译，一夜。

2016.09.02 编译完成，下载后发现不能正常启动。准备建立工程，修改下板级文件再说。把板级文件board-rk3188-sdk.c过了一遍，配合着make menuconfig，去掉一些无用项，把i2c器件按照板子实际情况添加上，简单修改rtc-pcf8563.c，使匹配。把背光相关改为i2c的dac7571。电脑休息一晚上！

20160903 因为发现android版本是4.4.4的，所以把虚拟机中的目录由4-4-2改成了4-4，避免以后出现疑惑。因此需要重新建立工程，并防止出错。make clean后进行了重新编译，编译之前，把kernel中rk616和rk3188的lcd对应关系做了一致，lcdc0 prime到618的1通道设置成input，lcd1 externel，6180通道设置成unused。android那一块把device目录下板级相关配置简单过了下，去掉了部分无用项，修改了wifi模块及audio模块的选择。等待编译完成


20160905 android部分还是有问题，暂时没什么思路。先修改下kernel中lcd的配置文件

20160906 找到了android部分有问题的log信息。网上没有找到有用的信息，没什么思路，写了邮件希望代理商或原厂能够提供下支持。发现android这块还是欠缺的太多，出了问题自己没什么思路。
另外碰到个问题，建立android部分的source insight工程，在synchronize files 会出错，昨天的工程直接打开出错，今天重新建立工程就出了这个问题。
另外，虚拟盘设的是200G，但是实际盘符只有100G，虽然没有用到100G，但是虚拟盘文件大小，在删除旧文件后再建立新文件时会增大，这样看来，新建立的文件并不会占用已经删除文件所占用的空间，而是去增加了虚拟盘文件的大小。
不知道物理盘符不够用时，但是虚拟盘设置的又比实际物理盘要大，这样会不会出问题？这个时候新文件是选择占用之前已经删除的文件的空间，还是去继续申请增加虚拟盘文件的大小（而物理盘符又没那么大，所以会报错）。
synchronize files 挂机等待明天看看会不会出问题

20160907 昨天的挂机，source insight 直接挂了。鉴于android部分没什么思路，今天计划两部分工作：1.把radxa的代码关于lcd与rk616部分与rockchip做一下对比，看看有什么差异。如果没有差异实在不行就还是用radxa的代码，如果有差异尝试修改下radxa部分代码，看看能不能调好屏2.继续android部分的调试和学习。顺便等下rockchip的支持。

20160908 
1.昨天比对两套代码的lcd及rk616部分代码发现不一样的还是挺多的。没有马上着手修改radxa的代码，想等下rockchip的支持。 android部分没有看，学习了一下午的git用法。
2.今天计划继续学习下git repo用法，另外再学习android相关。
3.git大致已经有个概念，具体用的时候再练习下就可以了。
4.android部分，今天仔细看了下kernel启动信息发现有以下报错信息：
[    4.277809] ump: version magic '3.0.8+ SMP preempt mod_unload ARMv7 ' should be '3.0.36 SMP preempt mod_unload ARMv7 '
[    4.287057] mali: version magic '3.0.8+ SMP preempt mod_unload ARMv7 ' should be '3.0.36 SMP preempt mod_unload ARMv7 '
[    4.288831] rk29_ipp: version magic '3.0.8+ SMP preempt mod_unload ARMv7 ' should be '3.0.36 SMP preempt mod_unload ARMv7 '
[    4.298285] init: /dev/hw_random not found
网上查了下说是模块的版本和kernel的版本不一致引起的错误。
发现版本一个是 3.0.8+ 一个是3.0.36 先是版本差异较大，在android部分找到/system/lib/modules/目录下两个版本的ko文件都有，那么修改一下init.rk30board.rc中版本即可。但是用modinfo 命令查看发现ko文件是3.0.36+ 多了个“+”，所以现手动insmod了下，发现果然不匹配。
网上继续搜索发现这个“+”可能和代码版本控制软件有关（svn或者git），而我的代码是repo下来又copy了一份才去编译的，怀疑和这个有关系。所以想着在repo直接下载的代码直接编译来试下。
5.基于上面分析，在repo直接下载的代码那里，新建了两个分支，想着对比一下，把改动的地方移植过来，然后再编译试下。挂机对比


20160909
1.对比已经完成，把修改都移植到.ssh中（直接repo sync下载下的代码目录），开始编译。代理商那边还在沟通，已发pcd图，今天邮件说是想让发两块板子。
2.编译过程中，因为物理硬盘只有100G而虚拟盘是200G的，虽然实际只用了40G左右的样子，但是新建文件时还是会去申请新的物理空间，造成物理空间不足而报错。准备把虚拟盘拷贝到另一个硬盘，再编译。
3.今天验证了下，在kernel下编译后，git status会跳过编译所产生的文件，这就说明过滤规则已经写好，果然还是想得比较周到。

20160910
1.虚拟盘拷贝到了另一个盘，重新编译后。前两天的问题已经解决。
2.但是发现android部分会由于屏幕没反应而休眠。网上搜索把休眠去掉，但是还不成功，怀疑修改的部分没有生效或者是由于rockchip与默认的android休眠机制不同。
3.由于怀疑修改没生效，再加上之前的工程也不能再用，索性把拷贝出来的那套代码删除，只保留repo直接下载的这套代码。利用周六日重新编译，并且重新建立工程。

20160912
1.工程大致建完，但是在最后同步android整个工程的时候，报错。怀疑是文件太多造成，因为其它几个同目录的工程没有问题。
2.重新编译完成，发现还是会suspend，另外发现不插下载线的时候，suspend之后会把console也suspend，即串口不再打印信息。修改printk.c中console_suspend_enabled这个变量为0可以使串口能继续使用。还是不能用，还是需要不进入休眠才行
3.修改了/device/rockchip/rksdk/init.rk30board.rc中的几个ko文件，都改为使用3.0.36+版本的
4.休眠的问题，今天又继续找原因，发现是之前修改的地方，在vi下拷贝粘贴，没修改。太坑了，什么状态。。。修改后不再自动进入休眠
5.android版本及休眠问题已解决。准备对比一下HDMI转换lvds之后的信号与rk618直接lvds信号之间的差异。由于HDMI转换LVDS的模块坏了，无法对比。

20160913 
1.计划用mstar板子与rk618的信号做下对比，没什么思路的话，再将rk618与rk3188的寄存器过一遍
2.配合时总测出两块板子寄给原厂
3.发现个新问题，新测了三块板子都会突然没反应，而且也不是在固定一个地方。很诡异。我之前使用的两块板子的差别，在rk618的HDMI的detect脚加了个下拉电阻。加上测试了下，发现还是有这个问题。
4.突然挂掉的问题暂时先不解决，先对比下rk618的寄存器。
5.给原厂的两块板子已经寄出，另外把自己的lcd及rk618相关的设置总结了下发了封邮件，希望原厂能快速定位问题。

20160914
1.测了几块板子都是突然的没反应
2.对了下rk618的寄存器，没什么思路
3.wifi那块一直报错，今天发现是把usb的wifi配成了sdio的了，并且kernel那块也需要改，配置一下看看什么效果。编译android时出错，看说明文档说是最好clean重新编。。趁着今天晚上编译。

20160918
1.wifi改为usb的即8723au，还是会出现突然没反应的情况。
2.接下来只有一个思路，代码回溯到之前的版本，看下会不会出现突然没反应的情况。

20160919
1.新建了一个分支，重新编译，没有添加rk616相关，pmu设置好，去掉一些没有用到的。编译后还是同样会出现突然没反应的情况。
2.把几乎所有修改都重新做了下，重新编译

20160920
1.编译完成，现象还是一样
2.今天又重新烧了radxa的代码，发现不会没反应，但是会重启。对比.config后发现看门狗造成，把rockchip的代码加上狗验证，确实如此。以前以为是radxa代码没问题，但看来都一样，至此，该问题没有思路。
3.有线网络已经调通
4.BOARD_FLASH_BLOCK_SIZE rksdk/Boardconfig.c中修改为512 ，重新编译看看效果

20160921
1.编译完成，现象还是一样
2.屏幕没有点亮的问题已经找到，是由于配置文件中，H_PW+H_BP+H_FP=140,而datasheet中是Th=960对应的Thd为140，屏幕实际宽度是1920，配置中只是把H_VD=Th(960)改成了1920，而没有把相应的Thd(H_PW+H_BP+H_FP)改为280，各自都翻倍即可。

20160922
1.计划先试下radxa那一套代码，如果屏能亮，那套代码的wifi等应该能用，能够尽快验证下硬件功能。另外在调试rockchip代码时也能做个对比。
2.radxa代码，屏已亮，经验证wifi可用，usb鼠标、U盘可用，有线网可用，rtc可读写。
3.已知问题：rk618声卡还没调，不能播放视频，会突然重启。

20160923
1.初步调试了下rockchip代码，usb还是不能识别。所以决定还是先调试radxa代码。
2.radxa代码，把声卡放大器的控制去掉（SD），已经有声音。不能播放视频的原因是出错重启后，声卡不能正常注册，所以不能播放。
3.还是有突然重启的问题。大联大的板子寄回来一块，试了下也一样。不能确定是软件还是硬件的问题，但是个人感觉软件上的问题还是很多的。时总说可以把DDR降频试下，如果降频后变好，说明硬件走线有问题，如果没变化，说明软件的问题可能性较大。

20160924
1.尝试DDR降频，主要修改在make menuconfig的system type，以及板级文件中dvfs_ddr_table数组中的值。
2.降频到200MHz时，初步测试，不再重启。
3.设置为400MHz时，会重启。

20160926
1.今天着重确认下DDR频率与重启的关系。300MHz时是否重启，200MHz时是否所有板子都不重启。
2.300MHz时，测出2次重启，不同的板子。
3.修改lcd.h（lcd_radxa_1024_600.c）中配置，lcd还是有横纹。效果还是不理想

20160927
总结一下，板子现在已知的问题如下：
1.lcd有横纹
2.声卡不能控制放大器的SD脚，不能拉高
3.板子上的背光功耗太大，背光控制功能还需细调
4.DDR降频到200MHz还会不会重启，需要拷机测试
5.kernel部分没有显示logo
6.kernel配置还需要去掉一些无用项
7.andoid部分需要按照客户的需求再过一遍，同时需要裁剪掉一部分内容
8.下载需要看下recovery，现在是下载后需要用sd卡来启动一下才行，要不然会一直不成功。另外需要看下usb或者sd卡下载方式，便于批量下载。
9.有时会一直打印310B的log，即没有正确读出emmc中程序。
10.喇叭有杂音

今天计划调一下屏幕
a.屏幕显示渐变色的时候会有条纹，修改屏幕参数中频率等，都没有效果，调整gamma，有些效果，但是还是有明显的条纹。现在怀疑是否android有设置lcd的分辨率等参数，不匹配造成的。
b.看到rockchip源码中 RKDocs/Develope reference documents目录下的《DDR常见问题简单排查-V1.0-20121205.pdf》有排查DDR问题的方法，发现重启问题有可能是电压问题。
c.\\192.168.1.88\sde1\radxa\radxa_rock_android4-4\RKDocs\common\display目录下的《Rockchip BOX 显示模块开发指南_V0.2.pdf》有android ui屏幕分辨率设置


20160928
1.按照《DDR常见问题简单排查-V1.0-20121205.pdf》调试了下，即把CPU频率固定在 1Ghz，GPU最高频率限定在 266Mhz 进行测试。ddr频率设置为400，还没有发现重启，简单拷机测试下。
2.lcd渐变色会有纹路，调试了gamma和对比度，有点变化，但一直会有纹路，已发邮件给代理商及原厂，看看是否还有其它的因素会造成这个现象。
3.android中device/rockchip/rksdk/BoardConfig.mk中把BOARD_USE_LCDC_COMPOSER 参数改为 true，clean并重新编译，看看lcd是否有效果。

20160929
1.昨天编译的系统，今天试了下直接报错，出错地方在init之后，所以应该是android部分有问题，所以把BOARD_USE_LCDC_COMPOSER改为false后再clean重编。重编后可正常启动。
2.overlay的值也会影响fb
3.明天计划分析下lcd和rk618的寄存器值，主要是位深度及长宽设置。

20160930
1.调了下dac7571，背光芯片，out脚一直为0，需要硬件配合调一下。软件上看着写成功了，值也正确，但是因为芯片不支持i2c读，所以不能读值确定。

20161008
1.和时总商量，先调一下lcd


20161009 
1.rk3188端lcd1改为lcd0，现象一样
2.rk618寄存器0x84有设置MSB is on D7，设置后，直接循环显示全屏红、绿、蓝、黑、灰。
3.rk618寄存器0x84中设置channel0 transmit even pixel，显示会变得模糊，不能解决问题


20161010
1.向fb的地址中直接写值，一行为1920*4=7680，但是发现写一行后会影响其它点，例如先刷屏为白色，然后写一行黑色，但是屏幕上方会出现如刻度一样的黑色短线。只写7664则正常，即最后4个点会影响到其它行的最后4个点。
2.修改屏幕配置参数后上面的问题解决，但是还是会有纹路

20161011
1.改回lcd1到rk618lcd0，去掉rk618的scaler，还是有纹路。

20161012
1.过了一遍寄存器，没发现什么问题

20161013
1.没思路，把内核中RFKILL的配置去掉
2.加上kernel的logo（bmp），发现logo显示的时候也是有问题，所以基本排除是android部分的可能
3.rk616寄存器0x9c中设置lvds den polarity，设置1后，直接灰屏
4.rk616寄存器0x9c中设置lvds hsync polarity，设置1后，无变化。

20161014
1.原厂提供了解决方法，修改rk616_lvds.c中rk616_lvds_cfg():
	int odd = (screen->left_margin&0x01)?1:0;
修改后即解决显示有纹路的问题。
2.添加kernel的logo后发现android会出错。

20161017
1.尝试使用kernel原clut224类型logo，但是发现此logo不能显示
2.修改dac7571驱动代码，将i2c写函数中，生成一个字节的0去掉，可正常调节背光，但是修改默认值后不成功，可能是android有最大最小值限制，修改驱动范围为0-255，使之与android相对应。修改android默认背光有：device/rockchip/radxa_rock_pro/system.prop的 ro.rk.def_brightness
frameworks/base/packages/SettingsProvider/res/values/defaults.xml的def_screen_brightness

3.修改了android中设置，去掉xml文件中的一些选项。
4.感觉有些没起作用，如默认背光还会是200，然后才会变为255，利用晚上clean后重新编译。

20161018
1.在terminator中编译一夜也没编译完，改为虚拟机自带终端编译。
2.昨天修改的android中设置的xml文件，导致编译不过去，还原后继续编译
3.接下来主要调试下载的问题
4.和时总对了一下各项功能

20161019
1.发现rockchip提供的代码下载后不需要插入sd卡，所以把rockchip代码中recovery的移植到radxa代码中，路径为：bootable/recovery目录，比对后copy全部不同项。问题解决，下载程序后不再需要插sd卡这一步骤。
2.因量产时需要测试各模块，且sd卡直接下载有问题，所以想着生产流程为：利用电脑下载pcba小固件，进行pcba测试后，再用电脑烧写完整固件。
3.对pcba做微调，按照externel/rk-pcba-test/doc/RockChip PCBA Test TRM.pdf中说明对配置文件修改，make installclean 后编译，没有生效，所以想着直接make clean重新编译试下
4.重新编译之前，把sdcard测试项中的设备路径改为dev/block/mmcblk1(externel/rk-pcba-test/res/mmctester.sh)
把codec测试项做了写修改使得不测试mic

20161020
1.重新编译后发现有些修改还是没生效，又make installclean后编译，生效。测试项都没什么问题，U口只能测试一个，但是都是一个hub上出来的，应该问题不大。另外需要添加一项测试项，有线网的测试，需要代码新增。
2.总结下接下来需要做的工作：
a.配合硬件调试下背光部分电路（电流大时有响声）
b.配合硬件调试下codec放大器部分电路（SD脚不能拉高）另外开机时的轻微响声需注意
c.配合硬件调试下有时不能启动的问题（MASKROM状态）
d.下一版本需要修改的部分有：reset复位芯片更换为限压高一点的芯片；背光部分电路；lvds供电芯片使能脚被DNP的电阻需要焊上。

e.背光，在Launcher启动之前默认值一直是200，需要找到并修改。另外背光的值正好是反着的，即值越大、背光越暗，需要修改过来，不然在按键黑屏时，背光电压反而是最高的。
f.kernel部分logo，如果有需要，还需要找出问题所在（clut logo不显示，bmp logo导致android不能正常启动）。
g.android启动后直接运行客户应用程序
h.去掉android的一些默认应用
i.android的设置需要优化一下，去掉一些无用项
j.pcba test测试程序中需要增加有线网络测试项
k.recovery的屏幕方向需要调整
l.recovery会有一些报错信息，需要优化
m.logcat中会有一些报错信息，需解决
n.关机键按下后的界面中需要去掉 飞行模式 选项


问题解决：

e问题，背光改为值越大，背光越亮。背光默认值在init.rc中有设置为200，做相应修改即可


20161021 
1.f问题，发现rockchip代码可以显示ppm格式logo，对比两套代码的logo显示相关部分代码，没有发现问题。最后追踪代码，发现logo的宽高不对，而ppm格式logo的宽高是通过ppm生成的c文件中logo_linux_clut224_data[21]-[24]取得，在drivers/video/logo/logo.c中的fb_find_logo()函数中通过判断depth来选择获取宽高的方法，而这个depth是由rk_fb.c中static struct fb_var_screeninfo def_var及rk_fb_register()中设置的fbi->var.bits_per_pixel = 16; 决定的。之前调试lcd的时候做了改动，造成不匹配。修改后即可显示ppm格式logo。
但是kernel部分logo与android部分logo之间会有一个黑屏的过程。按照mstar平台添加启动参数 delaylogo=true 效果一样，所以决定暂时还是不加kernel部分logo。

20161024
1.g问题已解决，但是为了调试方便，暂时把相关代码行注释掉了，最后去掉注释即可
2.h问题，屏蔽掉编译项后，有wallpaper删除后是会生成，直接make clean重新编译，看下效果。

20161025
1.h问题，重新编译后，还是会生成wallpaper相关的三个apk，在源码路径（packages/wallpapers/）中，直接将android.mk文件全部注释掉，使其不再编译。
2.h问题，另外拨号和短信相关的apk在/device/rockchip/common/phone/rk30_phone.mk中有编译项，可以注释掉即可。至此，h问题暂时告一段落。

3.i问题：通过代码中屏蔽掉 设置 中的部分选项，但是还有几个选项没找到

20161026
1.i问题,大部分无用项已经删除（蓝牙 流量使用情况；截屏设置 应用 位置信息 安全； 账户 添加账户；辅助功能 打印 开发者选项），但是 更多 这个一直没找到在哪里删，另外有线网络有问题，关闭后就打不开了,且设置为静态IP时也是直接关闭，无法打开。
2.h问题，另外通过logcat发现有两个应用需要删除：Stk.apk RKUpdateService.apk，已经屏蔽掉
3.i问题，设置->关于设备 中，去掉了一些无用项（状态 系统更新 基带版本）；并屏蔽掉点击版本号时会有进入开发者模式的提示；之前已经添加了 设备ID 这一项，路径为：/mnt/internal_sd/FLX/deviceID.txt
4.i问题，设置->显示 中，去掉 壁纸 及 屏保 两项，添加 亮度 调节
5.i问题，设置->更多 去掉。接下来设置中只剩下 有线网 这一个问题


20161027
1.i问题，设置中 有线网 的问题，发现在命令行下直接操作 busybox ifconfig eth0 up 时也不成功，会报错：ifconfig: SIOCSIFFLAGS: Cannot assign requested address ，网上搜索发现可能是由于网卡物理地址不正常，kernel中改为使用随机物理地址，问题即解决。至此，i问题告一段落。

2.n问题，frameworks\base\policy\src\com\android\internal\policy\impl\GlobalActions.java 中屏蔽掉即解决。

3.f问题，之前由于kernel部分logo到android启动logo之间会有一段黑屏时间，所以暂时没有使用kernel部分logo，最近想到两个可能性：
	1>android logo会有清屏的动作，去掉这个看是否还有
	2>这两部分logo的中间还有一个静态的android部分logo，rle格式的文件，是否这个有影响。
经尝试，还是不能解决问题。
修改\frameworks\base\core\res\assets\images 下的图片，不使用bootanimation.zip

20161028
1.i问题，设置->声音 菜单中去掉 系统 默认通知提示音 触摸提示音 音频设备管理
2.f问题，尝试将bootanimation.zip改为使用两张png图片方式，还是一样。尝试去掉这之前的清屏动作，还是有黑屏。尝试将显示rle格式logo这一部分代码注释，还是有黑屏。尝试添加rle格式的logo，按照网上的制作方法，始终不成功。


20161029
1.j问题：发现eth无法自动分配地址，所以先设置成静态地址，另外修改测试脚本后，发现修改的一直没有生效，所以利用晚上的时间，重新编译整个android系统。

20161031
1.j问题解决，之前不生效是由于没有烧写recovery.img，另外测试脚本中没有exit，而测试程序中判断脚本执行结果，一直都是fail，添加后即可。
2.l问题，set config done failed: Bad address，解决（由于ioctl传参有问题，与kernel驱动不一致）；get_cpu_info no find  nice，解决（由于cpu_test.c中检测字段不正确）;另外屏蔽掉其它一些看着不舒服的信息。


3.启动压力测试apk命令：
am start -n com.cghs.stresstest/com.cghs.stresstest.StressTestActivity

20161101
1.k问题，看了一下recovery部分代码，发现只支持旋转180度，如果旋转90度，由于宽高不等，实现起来可能会比较耗时间，所以暂时先不解决此问题，等看是否必须修改，再花时间弄。
2.m问题，有几个报错信息，但是不影响android运行，所以也暂时可以不解决。


3.至此，软件上遗留问题如下：
a.上电到看到logo有11秒左右的时间，可能需要减少这段时间
b.recovery的屏幕旋转问题
c.通过logcat等对android做优化
d.wifi芯片需更换为8188

20161102
1.开始看下usb驱动相关知识，为调试vga做准备

20161103
1.今天通过网上搜索到可以用busybox的udhcpc来动态获取ip，所以修改了下pcba_test部分的eth，将静态地址改为动态获取，这样同时可测试多个设备。过程中，执行此命令需要一个脚本，可在busybox.net中下载busybox源码，在examples/udhcp下找到simple.script脚本，修改一下，主要是一些命令需要添加busybox，另外busybox udhcpc -s可指定脚本路径
2.继续看usb驱动相关知识

20161104 
1.继续学习usb相关

20161105
1.帮忙测试GPRS模块一天

20161107
1.把之前的工作梳理了一下，并给贾老大发了份邮件,内容如下：

	工作总结：

	1.还需解决问题：
	a. 配合硬件调试下背光部分电路（电流大时有响声）
	b. 配合硬件调试下codec放大器部分电路（SD脚不能拉高）另外开机时的轻微响声需注意
	c. 配合硬件调试下有时不能启动的问题（MASKROM状态）
	d. 下一版本需要修改的部分有：reset复位芯片更换为限压高一点的芯片；背光部分电路；lvds供电芯片使能脚被DNP的电阻需要焊上。

	e. 上电到看到logo有11秒左右的时间
	f. recovery的屏幕旋转问题
	g. 通过logcat等对android做优化
	h. wifi芯片需更换为8188
	i. pcba test测试程序相关（量产测试用）
	j. vga相关

	2.已解决问题
	a. lvds接口lcd显示相关(黑屏及屏幕显示渐变色时有纹路)
	b. 背光芯片驱动相关(新加驱动，修改kernel及android的默认值)
	c. 板子无看门狗时会突然无反应，有看门狗时会在不同点重启
	d. kernel部分的简单裁剪(板级文件及config)，去掉一些无用项
	e. android开机logo更换
	f. android 去掉顶部及底部状态栏
	g. 屏幕默认缩放改为最大
	h. 设置中添加读取设备ID项（路径改为/mnt/internal_sd/FLX/deviceID.txt）
	i. shell直接root
	j. android启动后直接运行客户应用程序
	k. 去掉android的一些默认应用
	l. android的系统设置优化
	m. recovery会有一些报错信息，并且在烧写后需要插sd卡才能正常启动
	n. 关机键按下后的界面中需要去掉 飞行模式 选项

2.开始放下其它工作，主要做usb相关工作

20161108-1110
1.usb相关大致可分为三部分工作：
a.linux下的驱动部分（固件程序，arm芯片usb控制器驱动，具体usb设备驱动，这里主要是最后一个）
b.linux到android，HAL层驱动
c.android 应用程序

20161114
1.68013下载了一个测试程序，简单实现了usb驱动以及android下的c可执行程序，初步测试读写都可以。
2.接下来先调通HAL层通道

20161124
1.HAL层，jni，java app都已经实现，为了快速看出效果，只实现了一个字节的读写功能。
2.考虑到数据较大，数据的传输需要实现 内核到应用空间（驱动到应用），c++到java（HAL通过jni到Java service），Java进程间（Java service到app）传输，实现起来比较麻烦；另外一个思路是通过V4L2架构，将68013实现为一个摄像头的驱动，上层（java app）直接使用camera的接口，看了下camera的驱动实现起来也比较麻烦，且camera的接口在利用surfaceview显示的时候，是根据surfaceview的大小去设置摄像头的采样大小的，与vga的特性不符；发现android可以使用usbManager等相关的类来直接操作usb，linux端不需要再另外实现驱动，这样来看是最简单的方法。
3.现在的问题是：如何操作0端点，因为在linux中0端点不属于具体的接口；如何将565格式的数据显示到屏幕。


20161201
1.使用usbManager相关类实现了简单的应用，可以使用contrlbuffer直接控制0端点，也找到方法将bgr565转换为rgb565，将rgb565转换为bitmap，最后显示到surfaceview。
2.现在的问题是，linux中限制usbhost最大传输字节为16k，在读取usb信息的时候会丢数据；另外从采集一次到显示，时间上比较长，需解决。
3.尝试修改16k的限制：
	a.kernel/drivers/usb/core/devio.c 中修改 #define	MAX_USBFS_BUFFER_SIZE	1234944 /*16384*/
	b.android/system/core/libusbhost/usbhost.c 中修改 #define 
MAX_USBFS_BUFFER_SIZE   1234944 /*16384*/
这样改之后，直接获取大于16k的数据会直接返回-1.最后找出问题是等待时间设置太短了。修改为500后即可。

20161202
1.基本功能已经实现，但是延时较长，将采集、转换、显示，分拆为三个独立线程，实现优化，1秒左右可以刷新一帧。

20161209
1.单独的板子调试完成，调试自己做的板子，问题比较多。有部分板子EEPROM为空时都不能识别，为空时能识别的在换上烧写好的EEPROM，又不能识别。需要硬件配合查找问题。
2.在硬件调试期间，将此项目做了简单回顾与总结，上传到svn服务器。

20161212
1.已经调通一块板子，有两个问题：通过四线插针连接usb，不能正常识别；68013芯片本身有问题，无EEPROM时可枚举，有烧写好程序的EEPROM时无法正常枚举，更换芯片后正常。
2.需要将应用封装打包成库，直接提供一帧bgr565格式的数据。

20161213
1.配合硬件调试板子，准备提供给客户一块带有VGA的板子，由于之前测试好的板子突然出问题，68013还没到，暂时没有好板子可用。
2.着手将vga应用拆分，方便后续的打包及提供给客户。

20161214
1.拆分vga应用初步完成。
2.调试1024*768 60Hz的vga,出现上下三屏，
3.配合硬件调试板子，一块vga可用，但是wifi不可用，最终确定为5v转3.3v的片子有问题。

20161217
1.1024*768 60Hz的vga显示已经调试完成，后续需要在自己的板子上测试下
2.了解了下打包及混淆的流程，基本理顺。

20161220
1.1024*768 60Hz的vga显示功能在自己的板子上已经测试成功
2.调试8188模块wifi，
功能已完成，需测试性能。

20161224 20161225 
1.ofo产线帮忙2天

20161226
1.计划开始优化android
2.工厂ofo项目帮忙1天

20161230
1.这几天将android的编译系统大致过了一遍
2.开始按照log信息，对android做优化 /frameworks/base/services/java/com/android/server/SystemServer.java
	a.init.rk30board.rc中去掉akmd的服务，重力感应器。
	b.init.rc中去掉displayd服务；init.rk30board.rc中去掉wfd服务；SystemServer.java中去掉DisplayDeviceManagementService服务



2017年的目标：
知识体系扩充为三部分：
1.linux
2.Android
3.VC webservice mysql
完善前两部分的知识，主要通过阅读已买书（读完深入理解Linux内核,重读LDD；读完Android系统源代码情景分析 Android编程权威指南）
借着新项目（风力发电功率提升系统）来学习第3部分的相关知识



20170204
1.将年前鲜米机项目做的修改（改为横屏，删除一些无用项）提交
2.与王总沟通后确定等到6月份看公司情况，另外确定加入《风力发电功率提升系统》的开发。

20170206-07
1.查询风力发电相关的一些知识
2.与王总、贾老大一同过了一下新项目整体的框架及思路
3.拷贝相关的软件及王总的初步设计

20170208-10
1.鲜米机项目android应用开发来人，做支持一天
2.与时总画板前初步碰头，鲜米机项目，
	新板子使用32寸屏，51pin接口。
	需要增加4G功能。
	需要拉出2个串口与控制板及RFID板子通信。
	原本设计的中断gpio口没有确定
3.读《Android系统源代码情景分析》一书


20170213
1.鲜米机项目，安卓开发遇到问题：串口可收不可发，做了实验并将测试方法提供给对方，但是没有反馈
2.华音项目，对方公司自己做了底板，将触摸屏改为了使用I2C器件。因内核中贾老大修改过一部分，且工作量不大，他直接做驱动的移植
3.读《Android系统源代码情景分析》一书

20170214
1.鲜米机项目，安卓开发来人，串口飞线已掉，更换为串口3。并一同帮忙解决安卓应用出现的问题，但是未解决，错误提示找不到相关包。
2.下午远程协助安卓开发人员帮忙解决串口收发问题，顺便拷贝视频到板子。过段时间继续远程，帮忙解决串口编程的问题，到7点结束。
3.看书

20170215
1.看书

20170216
1.鲜米机项目，安卓开发来人，做一些支持
2.通过与广告机项目对比，确认新lcd的三个引脚的默认值
pin7    lvds select  默认选择低电平，匹配之前屏的数据格式
pin10  opc enable 默认选择低电平，避免可能出现的闪屏等现象(opc功能：根据外界亮度自动调节屏幕亮度)
pin8    ExtVBR-B  如果可以，选择pwm3
3.与控制板通信改为485，建议兼容硬件控制485的电路设计

20170217
1.利用git版本控制，重新整理Ubuntu中radxa相关的结构。主要利用branch的功能删除多余的源码，其次将目录结构整理，使之更加合理。

20170218
1.建立鲜米机项目的Source Insight 工程

20170220
1.为了解决没有路由器的时候不能用samab服务打开虚拟机上Source Insight的工程，将虚拟机配置为NAT模式。
2.简单学习Vim+Ctags的方法


20170221
1.上午继续学习Vim相关
2.下午解决板子串口不能通信的问题，两块板子串口都坏了，最后定位到可能原因是飞线没有做保护，与所接usb转串口模块不匹配，将串口烧坏了。后来直接接到控制板，串口工作正常。1.继续学习vim相关并完成初步的配置。

20170223
1.自己定制android及kernel的脚本，来生成vim下ctags和cscope的索引数据库
2.看书
3.鲜米机项目，lcd为120MHx，查看rk618的datasheet确认可支持到150MHz。
4.鲜米机项目，android应用开发反馈，wifi连接不稳定，测试后发现ping -s 4096 114.114.114.114,天线安装好后，不丢包，但是时间会偶尔比较大。 

20170224
1.分别用radxa，rockchip，自己编译的8192cu.ko来测试wifi，发现现象基本一样。都是基本没有丢包，偶尔的时间会比较大。尝试将Makefile中的power_saving选项关闭，重新编译生成ko包，现象一样。此问题留待新板子到了后做集中测试来看效果并解决。
2.整理A4纸临时笔记

20170725
1.将A4纸上记录RK3188关于Android编译的记录转换为电子版本。

20170227
1.鲜米机项目原理图已到手，但是lcd还没有确定。
2.考虑到多项目同时进行开发时，可能需要将现有git项目的某一分支clone一份，开始搜索git相关用法，开始时由于Ubuntu默认git版本太低，会报shallow repository相关的错误，不能进行clone，升级git版本后尝试git remote add 然后git push的方式来拷贝，等待时间较长且还会报错。直接git clone的方式则是在等待6个小时后，Ubuntu直接重启。
鉴于此，决定还是使用format-patch的方式来clone。

20170228
1.大致回顾下radxa的整体开发流程

20170301
1.git clone -b --single-branch可以只拷贝一个分支，但是耗时也是比较长的
git clone -b --depth 1 可以很快速的拷贝，但是提交信息不会保留。
2.看书


20170302
1.着手调试4G模块，通过命令方式发现已经能够正确识别。还需要将系统设置中的移动网络相关设置界面弄出来。

20170303
1.系统设置中已经有移动网络选项，但是还需细调，多了一个空白项，且首选网络中没有4G这个选项
2.2G已经能上网，还需具体细调4G相关
3.系统设置中去掉空白项，首选网络还是没有4G选项

20170304
1.首选网络已经有4G选项，但是设置完重新打开还会显示默认的为3G。通过 logcat -b radio查看信息发现SYSINFOEX: 2,3,0,1,,6,"LTE",101,"LTE" 说明使用的是4G。显示问题暂时不考虑解决了。SYSINFOEX参数说明见《HUAWEI ME909s Series LTE Module AT Command Interface Specification-(V100R001_0.2, English)_Draft.pdf》
4G选项开关：
打开移动模块配置使能
packages/services/Telephony/res/values/config.xml
@@ -137,7 +137,7 @@
  -    <bool name="config_enabled_lte" translatable="false">false</bool>
  +    <bool name="config_enabled_lte" translatable="false">true</bool>


20170306
1.添加新按键，GPIO0_D5，映射为android中的INFO KEYCODE_INFO

20170307
1.看书

20170308
1.修改背光及LCD相关，适配新的屏幕及HDMI接口。需要LCD到了后才能验证。

20170309
1.看书
2.找到rockchip源码，鼠标不能用的问题可能是usbhub的reset引脚没有拉高。但是发现android部分编译时一直打印Saved manifest to manifest.xml，编不过去。所以决定重新下载一份。最终发现问题是编译android时应该选择rk3188而不是rksdk。估计是manifest不匹配造成的。

20170310
1.rockchip源码，鼠标和U盘都已能正常使用。
2.因制电路板厂家不能按时完成，决定先调试两块之前的老板子以作备用。相应的将wifi修改为rtl8723，并重新编译。

20170311
1.两块老板子下载新程序并做测试，没有问题。
2.考虑到两个wifi模块需要同时并行开发，所以拷贝本地git仓库，做并行开发。

20170313
1.编译并行开发的android
2.看书
3.将rockchip源码repo仓库改为git仓库。并计划接下来的空余时间调试，适配鲜米机的板子。以便日后又不能解决的问题，可以找原厂支持。同时能够保持自己对系统的熟悉。

20170314-20170316
见 爱信德\项目\鲜米机\p101\rockchip源\修改记录.txt

20170317
1.调整radxa代码，鲜米机两个分支的ACT8846的输出电压值，DDR调整为1.5V，vcc_io的suspend电压调整为3.3V
2.通过查看RK3188的datasheet可知，RK3188支持的DDR3为DDR3-1066，而板子使用的DDR（SKhynix H5TQ4G63AFR PBC）的CL值为可编程，CL=7或8时，对应1066Mbps。另外还有DDR3-1066的描述，其中cl=7。
3.P101板贴片。下午到贴片厂,拿到客户那里的两块板子串口都烧了，又准备了一块老板以作备用。


20170317-20170319
周五下午贴片到晚上，一直调试到周六上午，王总拿走2块去客户那里。
周六上午，初步测试了国产新LCD，不清晰，其它正常。
周六晚上，继续调试新板的485，到半夜一起去客户那里直到周日下午回家已经18点左右。

20170320
1.调试新LCD，解决不清晰的问题。lvds通道与奇偶数据的对应关系调整好即可
2.调试新LCD，进口屏的背光，使用PWM控制亮度
3.教世超和杜春超下载系统

20170321
1.调试4G模块
2.调试rtl8188 wifi 模块
3.编写程序下载及测试文档

20170322-0323
1.解决 设置移动网络的首选模式为4G后，会自动变成3G
原因为android中4G会下发9，而4G模块datasheet说应该发2，实际测试发现需要设置为7.

20170324
1.将最新改动统一到两份代码，并编译出下载包，提供给时总。
2.下午帮忙下载并测试明天装机所需的板子。
3.发现有4块不能下载的板子，原因是一个件（D606）焊反了

20170327
1.适配led
2.增加一个GPIO中断，遇到一个问题，直接将引脚拉低，无法触发中断。实际测得该引脚一直为低电平。经查发现该GPIO内部默认为下拉。鉴于代码中没有现成可用的函数来设置上下拉（可通过直接地址赋值），所以直接将GPIO中断产生方式设置为上升沿触发方式。

20170328
1.问题：有时不能播放视频，软重启后问题还是存在，需要断电重启才能恢复。
一开始怀疑是apk调试过程中重新安装，造成的一些资源占用没有完全释放。后来手动产生oops，此问题即出现，发现是codec没有正常初始化造成的。修改驱动，即解决。
2.修改DDR频率，想要测试下在高频率的情况下是否能正常运行。一直使用的是400MHz（实际396），经修改频率验证，得出如下结果：kernel配置中设置reboot的DDR频率，设置为528或者533时不能正常启动；板级文件中设置normal时的DDR频率可到800MHz（实际792），但是需要长期拷机测试。

20170329
1.着手解决鲜米机apk预装及权限开放的事情。预装apk遇到无法找到lib库的问题，将正常安装的库文件全部拷贝，预装到系统默认的lib库路径即可。权限开放的问题，一开始以为开放system权限即可，但是实际发现不行，apk中想要关闭屏幕调用了DeviceAdmin相关，需要相关权限要高于system。

20170330
1.鲜米机项目去中吉粮顺义仓库一天，五台机器全部更新为20170328的系统，协助apk定位问题。

20170331
1.继续做开放权限的问题，最终找到申请过设备管理权限的apk，会在data/system的路径下生成device_policies.xml这样一个文件。所以将此文件直接预装到这里就好。这里由于没有生成userdata.img的烧录文件，所以将此文件预装到system下，然后在init.rc中copy过去。这样，权限问题得到解决。
预装apk及开放权限后，需要和盛世维智那边沟通，教一下他们签名方法，以及apk删除方法（更新apk时要用到）；需要他们提供一个稳定的apk预装到系统。

20170401
1.开始做华音代码验证的工作，保证代码烧写到不是自己做的板子上不能正常运行。
与贾老大讨论，初步设想在uboot中读取网卡地址，保存到env中。
2.与svn中代码比对，保持代码一致性。
3.期间，发现自己的电脑不能正常连接svn服务器，最后发现是虚拟机的NAT网络设置与外网为同网段造成冲突所致。通过修改子网掩码的方式，不更改虚拟机IP的情况下，做到NAT与外网不同网段，解决此问题。

20170405
1.编写简单的apk签名及预装更换的说明，以便提供给盛世维智。


20170406 -20170407
1.华音代码中添加相关验证，详见华音->加密验证，以及代码。

20170410
1.盛世维智的刘进秋过来测试预装及权限的问题，因对方更换包路径，造成权限没有正常开放,此问题解决后，apk一直报错，对方一直调试了一天也没有结果。
其中提供给对方简单的说明文档，来对apk签名以及更换预装的apk，并指导对方实际操作了一遍。因考虑签名方法需要linux系统下运行命令，所以又尝试了一种在Eclipse中直接签名的方法，经对方验证可以正常安装。

20170411
1.昨天发现一个bug，在system.prop中的注释语句有问题，应该单独一行并以#开头以作为注释，否则可能会影响正常的属性值。
2.rtl8188的代码中没有修改背光亮度的属性值，造成设置中设置越亮时实际反而越暗。修改相关属性值即可。

20170412
1.发现按下on/off键使系统进入深度休眠时，再按on/off键恢复后，lcd直接花屏。
2.发现休眠以及唤醒后的VCC_IO设置不对，修改后问题依然存在。

20170413
1.尝试修改驱动文件，休眠唤醒后花屏问题一直存在。
2.协助盛世维智刘进秋调试。上午是由于usb转串口线有问题。下午又出现签名预装apk相关的问题。

20170414-20170415
1.新项目： 动车网络协议适配 正式开始

20170417
鲜米机遗留问题：
a.休眠唤醒后lcd花屏
b.预装及权限开放问题，需要盛世维智给反馈并提供预装apk
c.优化
d.量产相关
e.电信卡的支持

20170419-20170430
1.长沙出差，动车UDP协议改为TRDP协议的相关工作。
2.遗留问题：
a.要用的代码，修改完后没有联调，只是模拟测试了下。
b.返回的数据与之前的协议有改动，代码中没有细调这一块。
c.一些用于测试的打印信息没有去掉，对方要求保留。

20170502
1.华音核心板测试相关。客户自己做的底板，触摸芯片改为Ii2c的tsc2007，出现i2c io error的错误信息，改为i2c1通道后，错误依然存在。后发现还有不能正常启动的情况。最后确认为断电情况下debug串口有电到板子，造成板子不能正常初始化。

20170503
1.上午继续做华音核心板测试相关工作，并将修改的代码及新的下载包上传到svn。
2.鲜米机需要调试电信卡的上网，现在是不能上网。

20170504
1.鲜米机板子，通过设置apn即可使用电信卡上网。
2.长沙七维的动车网络协议适配项目，提供给对方去掉打印信息的一套代码。并协助他们解决遇到的问题（经确认为sd卡挂载为只读文件系统了）。

20170505
1.制作用于烧写华音系统的下载包及sd卡。
2.着手解决休眠唤醒后LCD花屏的问题。

20170508
1.继续解决LCD休眠唤醒后花屏问题

20170509-20170510
1.配合盛世维智刘进秋调试鲜米机项目
2.继续解决LCD休眠唤醒后花屏问题，尝试了几种方法都不行，最后直接去掉深度休眠，暂时绕过此问题。

20170511
1.测试了rockchip的工厂工具，实测可以同时两块板子下载，理论上可多块。但是电源需要分开，不然会互相干扰。使用之前可以修改配置文件，设置默认固件路径以及下载完成后不自动重启。另外还可以将不同的USB口做一下标记，以便知道是哪路USB下载完成。